             NMOS Mapping of Identity and Timing Information to RTP
              Richard Cartwright's proposal for key/value header extensions
                            (DRAFT 07-RIC, June 2016)



1.  Scope

This specification describes a mapping of Source and Flow identifiers and
PTP-derived Grain timestamps to a Real-time Transport Protocol (RTP) [1] stream
using the audio and video conferences profile (AVP) [2] for the carriage of
synchronised video data, audio data, or other time-related data.

Source, Flow and Grain are as defined in the JT-NM Reference Architecture 1.0
[3], also described informatively in the NMOS Technical Overview.

Although uncompressed video and audio examples are presented, this specification
does NOT define a payload format, and is intended to be payload format agnostic.
As such, it can be applied to any payload format using the standard RTP header
structure.

This version of the specification allows a stream to be self-describing and contain
the both the essential technical metadata (ETM) and grain-spcific metadata (GM) in a
form that it can be decoded without reference to an external source, such as an SDP
file, while remaining compatible with SDP stream description.

2.  Grain (informative)

This specification uses the concept of a Grain to describe a unit of
mono-essence video, audio or other time-related data.

A video Grain contains a single video frame.

An audio Grain contains audio sample data from one or more audio channels.

A data Grain contains generic time-related data.

All types of Grain contain intimate metadata that is associated with the Grain's
mono-essence payload, providing it with identity and timing.



3.  Payload Formats (informative)

By using RTP without modification to existing RFCs, the core NMOS RTP
specification remains codec agnostic. The following payload profiles are
included as examples given their simple uncompressed nature. Other payload
profiles (and variants of the examples below) are also supported, with reference
to an appropriate external specification.


3.1.  RFC 4175 RTP Format (informative)

RFC 4175 [4] defines a payloading format for the carriage of uncompressed video
over RTP. Both progressive and interlaced scanning are supported.


3.2.  Linear PCM RTP Format (informative)

RFC 3551 [2] and RFC 3190 [5] define payloading formats for L16 and L24
uncompressed audio.



4.  Intimate Metadata RTP Format

A number of intimate grain metadata items are referenced in this specification:
 - PTP Sync (IEEE 1588-2008) Timestamp [6]
 - PTP Origin (IEEE 1588-2008) Timestamp [6]
 - SMPTE ST 12-1 (SMPTE 12M) Timecodes [7]
 - Flow Identifier
 - Source Identifier
 - Grain Duration

The Sync Timestamp provides an absolute capture or playback timestamp for the
Grain essence data. Two coincident audio and video Grains would share the same
Sync Timestamp, which remains associated with them as they pass through
processing devices.

The Origin Timestamp provides an absolute capture timestamp for the Grain
essence data. When capturing from a live source this should match the Sync
Timestamp. When replaying stored essence this will be populated from the Origin
Timestamp of the stored Grain.

SMPTE 12M Timecodes (e.g. LTC) are time labels for the Grain. The audio and
video data in coincident Grains typically have the same Timecodes. Timecode may
be omitted from Grains in cases where it is not available.

A Flow is a sequence of video or audio data with a fixed Source (uniquely
identified - see below) and encoding parameters. What is considered to be fixed
encoding parameters is beyond the scope of this specification. The Flow
Identifier is used to uniquely identify each Flow.

The Source Identifier uniquely identifies the Source for a Flow. What is
considered to be a Source (e.g. camera, SDI capture device) is beyond the scope
of this specification. A Source may have multiple Flows, each representing
different renditions of the Source data. E.g. a compressed flow will have the
same Source Identifier as an uncompressed Flow of the same Source data.

The Grain duration identifies the time period for which video essence within the
Grain should be displayed, or the time period within which the audio essence
should be played back. Data Grains may use the duration to signal a display
period or validity period as appropriate. Instantaneous Data Grains identifying
events should signal a duration of zero.

Essential technical metadata consists of a MIME type and parameters that provide
a decoder with sufficient parameters that it may start decoding. Additionally,
details of the packing structure may be included.

5.  RTP Stream

The RTP stream consists of a sequence of RTP packets. Each packet consists
of a header, optional header extensions and payload data.

The first and last packet of a Grain in an RTP stream carrying uncompressed data
contains header extensions. The header extensions in the first packet include 
the intimate metadata and the Grain flags. The last packet contains the Grain flags.

For compressed streams, a Grain is either a frame or a group of pictures (GOP). If 
the Grain represents a frame, only the IDR frames have to contain a complete set of
the intimate metadata. Other Grains only need to carry the Grain flags.

5.3.  RTP Packet Header Extensions

The following header extensions are defined in this specification:
  1. PTP Sync Timestamp
  2. PTP Origin Timestamp
  3. SMPTE ST 12-1 (SMPTE 12M) Timecodes (optional)
  4. Flow Identifier
  5. Source Identifier
  6. Grain Duration (optional)
  7. Grain Flags
  8. Content type
  9. Packing

Header extensions 1-7 are present either with the first packet or in a directly 
preceeding packet with no payload. Header extension 7 is present in the
last packet or a directlu preceeding packet with no payload. Header extension 3 
may be omitted entirely from the first set of extensions if no timecode is available.

Header extensions may expand to fill a whole RTP packet.

The two-byte header form of extension specified in [8] is used. This allows a
maximum individual extension size of 256 bytes excluding the header. The format
is as follows:

Each extension starts with a four byte header using the following form:

   0                   1
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |         0x100         |appbits|
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |   header extensions ....      |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  
  identifier: 24 bits
    The value shall be 0x0100. This identifies the two-byte header extension
    form specified in [8].

  appbits: 4 bits
    The appbits shall be a bit mask set as follows:

      0x8 - set bit to indicate complete set of intimate metadata
      0x4 - set bit to indicate partial set of intimate metadata
      0x2 - set to indicate the presence of essential technical metadata
      0x1 - set to indicate the presence of extension headers

Each element of header metadata has the following form:

    0                   1
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |       ID      |     length    |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

  identifier (ID): 8 bits
     Local identifier for the extension. The value shall be 1-256 and be unique 
     within this set of header extensions. 

  length (len): 8 bits
     Number of the extension in number of bytes. A value 0 indicates that no value
     is provided.

Note: The mapping between the local identifier and the header extension type is not 
relevant in this specification.

Each header extension shall consist of a string that is a UTF-8 encoded for the form
"<key>: <value>", similar to the messages headers used with HTTP [13]. The key should
be registered with IANA [15] or use "NMOS-" form for the extensions defined by this 
document. 

Note: The "X-" prefix for message header field names has been deprecated [14].

5.3.1.  PTP Sync Timestamp Header Extension

The PTP Sync timestamp has key "NMOS-PTPSync" with a value that is an integer seconds 
field followed by an integer nano-second field, separated by a colon. The nano-second 
field should be padded to 9 digits. For example:

    NMOS-PTPSync: 1467212802:976000000

5.3.2.  PTP Origin Timestamp Header Extension

The PTP Origin timestamp has key "NMOS-OriginTimestamp" with a value that is 
an integer seconds field followed by an integer nano-second field, separated by 
a colon. The nano-second field should be padded to 9 digits. For example:

    NMOS-OriginTimestamp: 1467212802:976000000

5.3.3.  SMPTE ST 12-1 (SMPTE 12M) Timecode Header Extension

The Timecode header extension has key "NMOS-Timecode" and value formatted 
accoroding to [12], the commonly used "hh:mm:ss[:;]ff" format. Use of the Timecode 
Header Extension is optional. For example:

    NMOS-Timecode: 12:23:53;05

5.3.4.  Flow Identifier Header Extension

The Flow identifier is an UUID [10], carried with key of "NMOS-FlowID" and a
value formatted according to the string representation of that document. For
example:

    NMOS-FlowID: 26F8B45A-027A-49D3-B135-DC8333D725DF

5.3.5.  Source Identifier Header Extension

The Source identifier is an UUID [10], carried with key of "NMOS-FlowID" and a
value formatted according to the string representation of that document. For
example:

    NMOS-SourceID: CEDEAC75-B3F6-4F8F-BA29-E5DBEA722E8B
    
5.3.6.  Grain Duration Header Extension

The Grain duration is a rational number with key "NMOS-GrainDuration" and 
a key consisting of integer numerator and denoninator values, separated by
a slash "/". For example:

    NMOS-GrainDuration: 1001/30000

5.3.7.  Grain Flags Header Extension

The Grain Flags indicate the start or end of a grain as follows:

    NMOS-GrainFlags: start
    
    NMOS-GrainFlags: end

Further enumeration values for the grain flag may be defined in the future.

5.3.8.  Essential Technical Metadata

Essential Technical Metadata is carried with key "Content-Type" and a value 
that is the text representation of the MIME-type of the data as specified for
the Content-Type header in HTTP [13]. For example:

    Content-Type: video/raw; sampling=YCbCr-4:2:2; width=1920; height=1080; depth=10; colorimetry=BT709-2; interlace=1

    Content-Type: audio/L16; rate=48000; channels=2

5.3.9.  Extension metadata

Other extension metadata may be provided with the stream, ensuring that names
do not clash with those defined by IANA or this document. Field names starting
"NMOS-" shall be considered reserved for definition by current and future NMOS
specifications. See best current practice in the definition of message header
field names [14].

6  SDP

Where a Session Description Protocol (SDP) file [11] is used to describe a
multimedia session, header extensions of this form do not have to be 
signalled as they are self-describing. How the SDP file is accessed is 
beyond the scope of this specification.

7.  References

[1]    RFC 3550, Realtime Transport Protocol (RTP)

[2]    RFC 3551, RTP profile, Audio and Video Conferences with Minimal Control

[3]    Joint Task Force for Networked Media Reference Architecture 1.0
       (jt-nm.org)

[4]    RFC 4175, RTP Payload Format for Uncompressed Video

[5]    RFC 3190, RTP Payload Format for 12-bit DAT Audio and 20- and 24-bit
       Linear Sampled Audio

[6]    IEEE 1588-2008 - IEEE Standard for a Precision Clock Synchronization
       Protocol for Networked Measurement and Control Systems

[7]    SMPTE ST 12-1, Time and Control Code, 2008

[8]    RFC 5285, A General Mechanism for RTP Header Extensions

[9]    RFC 5484, Associating Time-Codes with RTP Streams

[10]   RFC 4122, A Universally Unique IDentifier (UUID) URN Namespace

[11]   RFC 4566, SDP: Session Description Protocol

[12]   SMPTE ST 258, Transfer of Edit Decision Lists, 2004 (Archived 2011)

[13]   RFC 2616, Hypertext Transfer Protocol -- HTTP/1.1

[14]   RFC 6648, Deprecating the "X-" Prefix and Similar Constructs in Application Protocols

[15]   RFC 3864, Registration Procedures for Message Header Fields
